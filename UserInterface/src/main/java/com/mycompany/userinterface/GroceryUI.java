/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.userinterface;

import java.util.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;

/**
 *
 * @author Gian
 */
public class GroceryUI extends javax.swing.JFrame {
    
    int productNum = 0;
    int frameWidth = 350;
    int frameHeight = 300;
    boolean isPressed = true;
    
    ArrayList<String> cartProducts = new ArrayList<>();
    ArrayList<Double> cartPrices = new ArrayList<>();
    ArrayList<Integer> cartQuantity = new ArrayList<>();
    ArrayList<String> products = new ArrayList<>(Arrays.asList("", "", "", "", ""));
    ArrayList<Double> prices = new ArrayList<>(Arrays.asList(0.0, 0.0, 0.0, 0.0, 0.0));
    
        
    /**
     * Creates new form GroceryUI
     */
    public GroceryUI() {
        setTitle("Grocery Market");
        setSize(frameWidth, frameHeight);
        initComponents();
        showControls(false);
        showCart(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOptionPane = new javax.swing.JOptionPane();
        lblGrocery = new javax.swing.JLabel();
        lblCategory = new javax.swing.JLabel();
        btnList = new javax.swing.JButton();
        lblCategoryName = new javax.swing.JLabel();
        btnMeat = new javax.swing.JButton();
        btnSeafood = new javax.swing.JButton();
        btnFruit = new javax.swing.JButton();
        btnVegetable = new javax.swing.JButton();
        btnDairy = new javax.swing.JButton();
        btnMisc = new javax.swing.JButton();
        lblProduct = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        lblAmount = new javax.swing.JLabel();
        lblProductName1 = new javax.swing.JLabel();
        lblProductName2 = new javax.swing.JLabel();
        lblProductName3 = new javax.swing.JLabel();
        lblProductName4 = new javax.swing.JLabel();
        lblProductName5 = new javax.swing.JLabel();
        lblProductPrice1 = new javax.swing.JLabel();
        lblProductPrice2 = new javax.swing.JLabel();
        lblProductPrice3 = new javax.swing.JLabel();
        lblProductPrice4 = new javax.swing.JLabel();
        lblProductPrice5 = new javax.swing.JLabel();
        fldProductQuantity1 = new javax.swing.JTextField();
        fldProductQuantity2 = new javax.swing.JTextField();
        fldProductQuantity3 = new javax.swing.JTextField();
        fldProductQuantity4 = new javax.swing.JTextField();
        fldProductQuantity5 = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        lblYourCart = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        lblTotalPrice = new javax.swing.JLabel();
        btnCheckOut = new javax.swing.JButton();
        scrollPane = new javax.swing.JScrollPane();
        tblShoppingList = new javax.swing.JTable();
        lblDelete1 = new javax.swing.JLabel();
        lblDelete2 = new javax.swing.JLabel();
        lblCash = new javax.swing.JLabel();
        fldCashAmount = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(350, 300));
        setSize(new java.awt.Dimension(350, 300));

        lblGrocery.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblGrocery.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblGrocery.setText("GroceryMarket");
        lblGrocery.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblCategory.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblCategory.setText("Categories");

        btnList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnList.setText("Shopping List");
        btnList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListActionPerformed(evt);
            }
        });

        lblCategoryName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblCategoryName.setText("category name here");

        btnMeat.setText("Meat");
        btnMeat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMeatActionPerformed(evt);
            }
        });

        btnSeafood.setText("Seafood");
        btnSeafood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeafoodActionPerformed(evt);
            }
        });

        btnFruit.setText("Fruit");
        btnFruit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFruitActionPerformed(evt);
            }
        });

        btnVegetable.setText("Vegetables");
        btnVegetable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVegetableActionPerformed(evt);
            }
        });

        btnDairy.setText("Dairy");
        btnDairy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDairyActionPerformed(evt);
            }
        });

        btnMisc.setText("Misc.");
        btnMisc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMiscActionPerformed(evt);
            }
        });

        lblProduct.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblProduct.setText("Product");

        lblPrice.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPrice.setText("Price");

        lblAmount.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblAmount.setText("Amount:");

        lblProductName1.setText("Product1");

        lblProductName2.setText("Product2");

        lblProductName3.setText("Product3");

        lblProductName4.setText("Product4");

        lblProductName5.setText("Product5");

        lblProductPrice1.setText("P 0.00");

        lblProductPrice2.setText("P 0.00");

        lblProductPrice3.setText("P 0.00");

        lblProductPrice4.setText("P 0.00");

        lblProductPrice5.setText("P 0.00");

        fldProductQuantity1.setText("0");

        fldProductQuantity2.setText("0");

        fldProductQuantity3.setText("0");

        fldProductQuantity4.setText("0");

        fldProductQuantity5.setText("0");

        btnAdd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAdd.setText("Add to Cart");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        lblYourCart.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblYourCart.setText("Your Cart:");

        lblTotal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTotal.setText("Total:");

        lblTotalPrice.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTotalPrice.setText("P 0.00");

        btnCheckOut.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCheckOut.setText("Check Out");
        btnCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckOutActionPerformed(evt);
            }
        });

        tblShoppingList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Quantity", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblShoppingList.getTableHeader().setResizingAllowed(false);
        tblShoppingList.getTableHeader().setReorderingAllowed(false);
        tblShoppingList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblShoppingListKeyPressed(evt);
            }
        });
        scrollPane.setViewportView(tblShoppingList);

        lblDelete1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDelete1.setText("To remove an item from your cart,");

        lblDelete2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDelete2.setText("select it and then press BACKSPACE.");

        lblCash.setText("Cash: P");

        fldCashAmount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fldCashAmount.setText("Amount");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addComponent(btnList))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblGrocery, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnMeat, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnFruit, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnDairy, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSeafood, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnVegetable, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnMisc, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(15, 15, 15)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(lblProduct)
                                                    .addComponent(lblProductName2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(lblProductName3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(lblProductName4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(lblProductName5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(lblProductName1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(29, 29, 29)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(lblProductPrice2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblProductPrice3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblProductPrice4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblProductPrice5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblProductPrice1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(90, 90, 90)
                                            .addComponent(btnAdd)))
                                    .addGap(9, 9, 9)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(fldProductQuantity4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(fldProductQuantity5, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(fldProductQuantity3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(fldProductQuantity2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(fldProductQuantity1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblAmount)))
                                .addComponent(lblCategoryName)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblDelete1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblYourCart)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnCheckOut))
                            .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(lblDelete2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(38, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblTotal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTotalPrice)
                                .addGap(25, 25, 25))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblCash)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fldCashAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(72, 72, 72))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnList, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGrocery, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCategory)
                    .addComponent(lblYourCart)
                    .addComponent(btnCheckOut))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDelete1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDelete2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTotal)
                            .addComponent(lblTotalPrice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCash)
                            .addComponent(fldCashAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnMeat, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnFruit, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDairy, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSeafood, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnVegetable, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnMisc, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lblCategoryName)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblProduct)
                            .addComponent(lblPrice)
                            .addComponent(lblAmount))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblProductName1)
                            .addComponent(lblProductPrice1)
                            .addComponent(fldProductQuantity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblProductName2)
                            .addComponent(lblProductPrice2)
                            .addComponent(fldProductQuantity2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblProductName3)
                            .addComponent(lblProductPrice3)
                            .addComponent(fldProductQuantity3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblProductName4)
                            .addComponent(lblProductPrice4)
                            .addComponent(fldProductQuantity4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblProductName5)
                            .addComponent(lblProductPrice5)
                            .addComponent(fldProductQuantity5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnAdd)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblDelete1.getAccessibleContext().setAccessibleName("To remove an item from you cart,\nselect then backspace");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListActionPerformed
        if (isPressed) {
            frameWidth = 600; frameHeight = 625;
            setSize(frameWidth,frameHeight);
            showCart(true);
            isPressed = false;
        }
        else {
            frameWidth = 350;
            setSize(frameWidth,frameHeight);
            showCart(false);
            isPressed = true;
        }
    }//GEN-LAST:event_btnListActionPerformed

    private void btnVegetableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVegetableActionPerformed
        categoryDisplay("Vegetables");
    }//GEN-LAST:event_btnVegetableActionPerformed

    private void btnSeafoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeafoodActionPerformed
        categoryDisplay("Seafood");
    }//GEN-LAST:event_btnSeafoodActionPerformed

    private void btnFruitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFruitActionPerformed
        categoryDisplay("Fruit");
    }//GEN-LAST:event_btnFruitActionPerformed

    private void btnDairyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDairyActionPerformed
        categoryDisplay("Dairy");
    }//GEN-LAST:event_btnDairyActionPerformed

    private void btnMiscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMiscActionPerformed
        categoryDisplay("Miscellaneous");
    }//GEN-LAST:event_btnMiscActionPerformed

    private void btnMeatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMeatActionPerformed
        categoryDisplay("Meat");
    }//GEN-LAST:event_btnMeatActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        double total = 0;
        try {
            int quantity1 = Integer.parseInt(fldProductQuantity1.getText());
            int quantity2 = Integer.parseInt(fldProductQuantity2.getText());
            int quantity3 = Integer.parseInt(fldProductQuantity3.getText());
            int quantity4 = Integer.parseInt(fldProductQuantity4.getText());
            int quantity5 = Integer.parseInt(fldProductQuantity5.getText());
            int quantities[] = {quantity1, quantity2, quantity3, quantity4, quantity5};

                for (int i = 0; i < quantities.length; i++){
                    if (quantities[i] > 0){
                        cartProducts.add(products.get(i));
                        cartPrices.add(prices.get(i));
                        cartQuantity.add(quantities[i]);
                        updateCart();
                    }
                }
            getTotalCost();
            }
        catch(NumberFormatException except) {
            jOptionPane.showMessageDialog(this, "Enter a valid number.", "Add To Cart Error", jOptionPane.ERROR_MESSAGE);
        }
        
        
        fldProductQuantity1.setText("0");
        fldProductQuantity2.setText("0");
        fldProductQuantity3.setText("0");
        fldProductQuantity4.setText("0");
        fldProductQuantity5.setText("0");
    }//GEN-LAST:event_btnAddActionPerformed

    private void tblShoppingListKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblShoppingListKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_BACK_SPACE){
            DefaultTableModel model = (DefaultTableModel) tblShoppingList.getModel();
            int selectedRow = tblShoppingList.getSelectedRow();
            if (selectedRow != -1) {
                model.removeRow(selectedRow);
                cartProducts.remove(selectedRow);
                cartPrices.remove(selectedRow);
                cartQuantity.remove(selectedRow);
                productNum--;
            }
        }
        getTotalCost();
    }//GEN-LAST:event_tblShoppingListKeyPressed

    private void btnCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckOutActionPerformed
        try{
            DecimalFormat df = new DecimalFormat("0.00");
            double cash = Integer.parseInt(fldCashAmount.getText());
            double change = cash - getTotalCost();
            
            if (cash < getTotalCost()){
                jOptionPane.showMessageDialog(this, "Insufficient Balance.", "Payment Failed", jOptionPane.ERROR_MESSAGE);
                return;
            }
            
            if (cartProducts.isEmpty()){
                jOptionPane.showMessageDialog(this, "You have not selected any items for checkout.", "Payment Failed", jOptionPane.ERROR_MESSAGE);
                return;
            }
      
            ReceiptUI rec = new ReceiptUI();
            rec.setVisible(true);
            rec.lblTotalNumber.setText("P " + getTotalCost());
            rec.lblAmountReceivedNumber.setText("P " + cash);
            rec.lblChangeNumber.setText("P " + df.format(change));
            var m = (DefaultTableModel)rec.tblReceipt.getModel();

            for (int i = 0; i < cartProducts.size(); i++) {
                m.addRow(new Object[] {
                    cartProducts.get(i),
                    cartQuantity.get(i),
                    cartPrices.get(i)
                });
            }
        }
        catch(NumberFormatException except) {
            jOptionPane.showMessageDialog(this, "Enter a valid number.", "Check Out Error", jOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCheckOutActionPerformed
         
    private void categoryDisplay(String category){
        showControls(true);
        
        switch (category) {
            case "Meat":
                String[] meatProducts = {"Beef 1kg", "Pork 1kg", "Chicken 1kg", "Lamb 1kg", "Duck 1kg"};
                double[] meatPrices = {599.00, 169.00, 137.00, 1049.00, 168.00};
                
                for (int i = 0; i < meatProducts.length; i++){
                    products.set(i, meatProducts[i]);
                    prices.set(i, meatPrices[i]);
                }
                break;
                
            case "Seafood":
                String[] seafoodProducts = {"Crab 1kg", "Shrimp 1kg", "Fish 1kg", "Lobster 1kg", "Squid 1kg"};
                double[] seafoodPrices = {841.17, 295.33, 142.20, 217.63, 163.58};
                
                for (int i = 0; i < seafoodProducts.length; i++){
                    products.set(i, seafoodProducts[i]);
                    prices.set(i, seafoodPrices[i]);
                }
                break;
                
            case "Fruit":
                String[] fruitProducts = {"Mango 1kg", "Apple 1kg", "Banana 1kg", "Orange 1kg", "Grapes 1kg"};
                double[] fruitPrices = {158.60, 156.00, 70.00, 231.00, 465.00};
                
                for (int i = 0; i < fruitProducts.length; i++){
                    products.set(i, fruitProducts[i]);
                    prices.set(i, fruitPrices[i]);
                }
                break;
                
            case "Vegetables":
                String[] vegetableProducts = {"Cabbage 1kg", "Onion 1kg", "Garlic 1kg", "Lettuce 1kg", "Carrot 1kg"};
                double[] vegetablePrices = {25.00, 750.00, 210.00, 48.72, 76.53};
                
                for (int i = 0; i < vegetableProducts.length; i++){
                    products.set(i, vegetableProducts[i]);
                    prices.set(i, vegetablePrices[i]);
                }
                break;
                                
            case "Dairy":
                String[] dairyProducts = {"Cheese", "Milk", "Yogurt", "Ice Cream", "Butter"};
                double[] dairyPrices = {143.84, 149.99, 119.95, 344.00, 214.04};
                
                for (int i = 0; i < dairyProducts.length; i++){
                    products.set(i, dairyProducts[i]);
                    prices.set(i, dairyPrices[i]);
                }
                break;

            case "Miscellaneous":
                String[] miscellaneousProducts = {"Egg 1dz", "Hotdog", "Tocino", "Nuggets", "Tapa"};
                double[] miscellaneousPrices = {82.80, 153.00, 164.65, 129.00, 190.00};
                
                for (int i = 0; i < miscellaneousProducts.length; i++){
                    products.set(i, miscellaneousProducts[i]);
                    prices.set(i, miscellaneousPrices[i]);
                }
                break;
        }
        
        lblCategoryName.setText(category);
        lblProductName1.setText(products.get(0));
        lblProductName2.setText(products.get(1));
        lblProductName3.setText(products.get(2));
        lblProductName4.setText(products.get(3));
        lblProductName5.setText(products.get(4));
        lblProductPrice1.setText("P " + prices.get(0));
        lblProductPrice2.setText("P " + prices.get(1));
        lblProductPrice3.setText("P " + prices.get(2));
        lblProductPrice4.setText("P " + prices.get(3));
        lblProductPrice5.setText("P " + prices.get(4));
    }
    
    private void updateCart(){
        var model = (DefaultTableModel)tblShoppingList.getModel();
        model.addRow(new Object[]{
            cartProducts.get(productNum),
            cartQuantity.get(productNum),
            cartPrices.get(productNum)
        });
        productNum = cartProducts.size();
    }
    
    private double getTotalCost(){
        double total = 0;
        DecimalFormat df = new DecimalFormat("0.00");
        
        if (cartProducts.size() == 0) {
            lblTotalPrice.setText("P 0.00");
        } else {
            for (int i = 0; i < cartProducts.size(); i++){
                total += cartPrices.get(i) * cartQuantity.get(i);
                lblTotalPrice.setText("P " + df.format(total));
            }
        }
        return total;
    }
    
    private void showControls(boolean isVisible){
        if (isVisible) {
            frameHeight = 625;
            setSize(frameWidth, frameHeight);
        }
        lblCategoryName.setVisible(isVisible);
        lblProduct.setVisible(isVisible);
        lblPrice.setVisible(isVisible);
        lblAmount.setVisible(isVisible);
        lblProductName1.setVisible(isVisible);
        lblProductName2.setVisible(isVisible);
        lblProductName3.setVisible(isVisible);
        lblProductName4.setVisible(isVisible);
        lblProductName5.setVisible(isVisible);
        lblProductPrice1.setVisible(isVisible);
        lblProductPrice2.setVisible(isVisible);
        lblProductPrice3.setVisible(isVisible);
        lblProductPrice4.setVisible(isVisible);
        lblProductPrice5.setVisible(isVisible);
        fldProductQuantity1.setVisible(isVisible);
        fldProductQuantity2.setVisible(isVisible);
        fldProductQuantity3.setVisible(isVisible);
        fldProductQuantity4.setVisible(isVisible);
        fldProductQuantity5.setVisible(isVisible);
        btnAdd.setVisible(isVisible);
    }
    
    private void showCart(boolean isVisible){
        lblYourCart.setVisible(isVisible);
        scrollPane.setVisible(isVisible);
        tblShoppingList.setVisible(isVisible);
        lblTotal.setVisible(isVisible);
        lblTotalPrice.setVisible(isVisible);
        lblDelete1.setVisible(isVisible);
        lblDelete2.setVisible(isVisible);
        btnCheckOut.setVisible(isVisible);
        lblCash.setVisible(isVisible);
        fldCashAmount.setVisible(isVisible);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GroceryUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GroceryUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GroceryUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GroceryUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run(){
                new GroceryUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCheckOut;
    private javax.swing.JButton btnDairy;
    private javax.swing.JButton btnFruit;
    private javax.swing.JButton btnList;
    private javax.swing.JButton btnMeat;
    private javax.swing.JButton btnMisc;
    private javax.swing.JButton btnSeafood;
    private javax.swing.JButton btnVegetable;
    private javax.swing.JTextField fldCashAmount;
    private javax.swing.JTextField fldProductQuantity1;
    private javax.swing.JTextField fldProductQuantity2;
    private javax.swing.JTextField fldProductQuantity3;
    private javax.swing.JTextField fldProductQuantity4;
    private javax.swing.JTextField fldProductQuantity5;
    private javax.swing.JOptionPane jOptionPane;
    private javax.swing.JLabel lblAmount;
    private javax.swing.JLabel lblCash;
    private javax.swing.JLabel lblCategory;
    private javax.swing.JLabel lblCategoryName;
    private javax.swing.JLabel lblDelete1;
    private javax.swing.JLabel lblDelete2;
    private javax.swing.JLabel lblGrocery;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblProduct;
    private javax.swing.JLabel lblProductName1;
    private javax.swing.JLabel lblProductName2;
    private javax.swing.JLabel lblProductName3;
    private javax.swing.JLabel lblProductName4;
    private javax.swing.JLabel lblProductName5;
    private javax.swing.JLabel lblProductPrice1;
    private javax.swing.JLabel lblProductPrice2;
    private javax.swing.JLabel lblProductPrice3;
    private javax.swing.JLabel lblProductPrice4;
    private javax.swing.JLabel lblProductPrice5;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblTotalPrice;
    private javax.swing.JLabel lblYourCart;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTable tblShoppingList;
    // End of variables declaration//GEN-END:variables
}
